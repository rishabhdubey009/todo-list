{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","React","useState","tasks","setTasks","task","useRef","taskString","setTaskString","editedTaskString","setEditedTaskString","editedTask","selectedTask","setSelectedTask","handleEdit","e","value","target","id","onChange","ref","rows","cols","onClick","length","name","map","className","tasksRep","filter","deleteTask","newTask","editTask","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8OAmGeA,MAhGf,WACE,MAA0BC,IAAMC,SAAS,IAAzC,mBAAOC,EAAP,KAAcC,EAAd,KACMC,EAAOJ,IAAMK,SACnB,EAAoCL,IAAMC,SAAS,IAAnD,mBAAOK,EAAP,KAAmBC,EAAnB,KACA,EAAgDP,IAAMC,SAAS,IAA/D,mBAAOO,EAAP,KAAyBC,EAAzB,KACMC,EAAaV,IAAMK,SACzB,EAAwCL,IAAMC,SAAS,MAAvD,mBAAOU,EAAP,KAAqBC,EAArB,KAwCMC,EAAa,SAACC,GAClB,IAAIC,EAAQD,EAAEE,OAAOD,MACrBN,EAAoBM,IAGtB,OACE,sBAAKE,GAAG,OAAR,UACE,0BACEA,GAAG,OACHF,MAAOT,EACPY,SAfmB,SAACJ,GACxB,IAAIC,EAAQD,EAAEE,OAAOD,MACrBR,EAAcQ,IAcVI,IAAKf,EACLgB,KAAK,IACLC,KAAK,OAEP,wBAAQJ,GAAG,MAAMK,QArDJ,WACI,KAAfhB,IACJH,GAAS,SAACD,GAAD,4BACJA,GADI,CAEP,CACEe,GAAIX,EAAaJ,EAAMqB,OACvBC,KAAMlB,QAGVC,EAAc,MA4CZ,kBAGA,6BACGL,EAAMuB,KAAI,SAACrB,GAAD,OACT,+BACE,sBAAMsB,UAAU,OAAhB,SAAwBtB,EAAKoB,OAC7B,wBAAQE,UAAU,SAASJ,QAAS,kBApC3B,SAACL,GAClB,IAAIU,EAAWzB,EAAM0B,QAAO,SAACxB,GAAD,OAAUA,EAAKa,KAAOA,KAClDd,GAAS,SAACD,GAAD,OAAWyB,KAkC8BE,CAAWzB,EAAKa,KAA1D,oBAGA,wBAAQS,UAAU,OAAOJ,QAAS,kBAlC9BL,EAkCyCb,EAAKa,QAjC1DL,EAAgBK,GADL,IAACA,GAkCJ,kBAGCN,IAAiBP,EAAKa,GACrB,qCACE,0BACEE,IAAKT,EACLK,MAAOP,EACPU,SAAUL,EACVa,UAAU,WACVN,KAAK,IACLC,KAAK,OAEP,wBAAQK,UAAU,WAAWJ,QAAS,kBAhEnC,SAACL,GAChB,GAAyB,KAArBT,EAAJ,CACA,IAAImB,EAAWzB,EAAMuB,KAAI,SAACrB,GACxB,IAAI0B,EAAO,eAAQ1B,GAEnB,OADIA,EAAKa,KAAOA,IAAIa,EAAQN,KAAOhB,GAC5BsB,KAET3B,GAAS,SAACD,GAAD,OAAWyB,KACpBf,EAAgB,MAChBH,EAAoB,KAuDoCsB,CAAS3B,EAAKa,KAA1D,qBAIA,OAtBGb,EAAKa,aCzDTe,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.6ffc86f5.chunk.js","sourcesContent":["import React from \"react\";\nimport './App.css';\n\nfunction App() {\n  const [tasks, setTasks] = React.useState([]);\n  const task = React.useRef();\n  const [taskString, setTaskString] = React.useState(\"\");\n  const [editedTaskString, setEditedTaskString] = React.useState(\"\");\n  const editedTask = React.useRef();\n  const [selectedTask, setSelectedTask] = React.useState(null);\n\n  const saveTask = () => {\n    if (taskString === \"\") return;\n    setTasks((tasks) => [\n      ...tasks,\n      {\n        id: taskString + tasks.length,\n        name: taskString\n      }\n    ]);\n    setTaskString(\"\");\n  };\n\n  const editTask = (id) => {\n    if (editedTaskString === \"\") return;\n    let tasksRep = tasks.map((task) => {\n      let newTask = { ...task };\n      if (task.id === id) newTask.name = editedTaskString;\n      return newTask;\n    });\n    setTasks((tasks) => tasksRep);\n    setSelectedTask(null);\n    setEditedTaskString(\"\");\n  };\n\n  const deleteTask = (id) => {\n    let tasksRep = tasks.filter((task) => task.id !== id);\n    setTasks((tasks) => tasksRep);\n  };\n\n  const edit = (id) => {\n    setSelectedTask(id);\n  };\n\n  const handleTaskChange = (e) => {\n    let value = e.target.value;\n    setTaskString(value);\n  };\n\n  const handleEdit = (e) => {\n    let value = e.target.value;\n    setEditedTaskString(value);\n  };\n\n  return (\n    <div id=\"main\">\n      <textarea\n        id=\"task\"\n        value={taskString}\n        onChange={handleTaskChange}\n        ref={task}\n        rows=\"4\"\n        cols=\"50\"\n      ></textarea>\n      <button id=\"btn\" onClick={saveTask}>\n        save\n      </button>\n      <ol>\n        {tasks.map((task) => (\n          <li key={task.id}>\n            <span className=\"list\">{task.name}</span>\n            <button className=\"delete\" onClick={() => deleteTask(task.id)}>\n              delete\n            </button>\n            <button className=\"edit\" onClick={() => edit(task.id)}>\n              edit\n            </button>\n            {selectedTask === task.id ? (\n              <>\n                <textarea\n                  ref={editedTask}\n                  value={editedTaskString}\n                  onChange={handleEdit}\n                  className=\"editTask\"\n                  rows=\"4\"\n                  cols=\"50\"\n                ></textarea>\n                <button className=\"saveTask\" onClick={() => editTask(task.id)}>\n                  save\n                </button>\n              </>\n            ) : null}\n          </li>\n        ))}\n      </ol>\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}